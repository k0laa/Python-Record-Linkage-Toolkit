# 1 Database - Deduplikasyon Örneği
# Tek veritabanı içindeki mükerrer kayıtları bulma

# PROJE BİLGİLERİ
project_name: "Müşteri Veritabanı Deduplikasyon Projesi"
description: "CRM sistemindeki mükerrer müşteri kayıtlarını tespit etme ve temizleme"

# ÇOKLU VERİTABANI SİSTEMİ
databases:
  - name: "customers"
    path: "../data/crm.db"
    table: "customers"
    columns:
      id: "customer_id"
      name: "full_name"
      email: "email_address"
      phone: "phone_number"
      address: "street_address"
      city: "city"

# RECORD LINKAGE KONFİGÜRASYONU
recordlinkage_config:
  # İndeksleme ayarları - Deduplikasyon için
  indexing:
    method: "block"
    key: "name"  # İsme göre blokla
  
  # Karşılaştırma kuralları
  comparison:
    # E-posta karşılaştırması - En güvenilir alan
    - field: "email"
      method: "exact"
      
    # İsim karşılaştırması - Bulanık eşleştirme
    - field: "name"
      method: "string"
      algorithm: "jarowinkler"
      threshold: 0.85
      
    # Telefon karşılaştırması
    - field: "phone"
      method: "exact"
      
    # Adres karşılaştırması
    - field: "address"
      method: "string"
      algorithm: "levenshtein"
      threshold: 0.75
      
    # Şehir karşılaştırması
    - field: "city"
      method: "string"
      algorithm: "jaro"
      threshold: 0.9
  
  # Sınıflandırma ayarları
  classification:
    method: "threshold"
    threshold: 0.7

# ÇIKTI AYARLARI
output:
  # Veritabanına kaydetme
  save_to_db: true
  results_database_path: "../data/deduplication_results.db"
  table_prefix: "dedup"
  
  # CSV export ayarları
  export_csv: true
  csv_base_path: "../results/deduplication" 